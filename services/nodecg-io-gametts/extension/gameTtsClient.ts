import { GameTTSConfig } from "./index";
import fetch, { Response } from "node-fetch";
import { emptySuccess, error, ObjectMap, Result } from "nodecg-io-core";
import { voiceMap } from "./voiceMap";

export class GameTTSClient {
    constructor(private readonly config: GameTTSConfig) {}

    private buildBaseURL(): string {
        const protocol = this.config.useHttps ? "https" : "http";
        return `${protocol}://${this.config.host}`;
    }

    private async executeRequest(path: string): Promise<Response> {
        const response = await fetch(this.buildBaseURL() + path);
        if (!response.ok) {
            throw new Error(`Failed to execute gametts request: ${await response.text()}`);
        }

        return response;
    }

    /**
     * Get all the ids of all voices that gametts supports with a voice name as the object key.
     */
    getVoices(): ObjectMap<number> {
        const voiceEntries = Object.entries(voiceMap).map(([key, value]) => [key, parseInt(value)]);
        return Object.fromEntries(voiceEntries);
    }

    /**
     * Generates a URL to a .wav file with the spoken text that is generated using GameTTS:
     */
    generateWavUrl(text: string, voiceId: number): string {
        const params = new URLSearchParams({ text, speaker_id: voiceId.toString() });
        return `${this.buildBaseURL()}/?${params}`;
    }

    /**
     * Downloads the .wav file from the given URL and returns it as a Buffer.
     * @param url the url generated by {@link generateWavUrl}
     * @returns the wav file
     */
    async getWavData(url: string): Promise<ArrayBuffer> {
        const response = await fetch(url);
        if (!response.ok) {
            throw new Error(`Failed to fetch wav audio data: ${await response.text()}`);
        }

        return await response.arrayBuffer();
    }

    async isGameTTSAvailable(): Promise<Result<void>> {
        try {
            await this.executeRequest("");
            return emptySuccess();
        } catch (err) {
            return error(`Failed to connect to gametts instance at ${this.buildBaseURL()}: ${err}`);
        }
    }
}
